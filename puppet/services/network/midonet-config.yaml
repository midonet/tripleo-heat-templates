heat_template_version: 2016-04-08

description: >
  Initial network creation using Puppet. It creates and configures the edge
  router, as well as an initial floating IP network.

parameters:
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  NetworkConfigPortPhysicalName:
    description: Physical interface to which the port will be bound to. It has
                 to be in the old-fashioned form (i.e. eth0 instead of enp0s3).
                 If the name is in the new standard (e.g. enp0s3) the program
                 `biosdevname` will be used to resolve to the old fashion name.
    type: string
  NeutronServiceProviders:
    default: 'LOADBALANCERV2:Midonet:midonet_ext.neutron.services.loadbalancer.v2_driver.MidonetLoadBalancerDriver:default'
    description: Array containing all the service providers to be used
                 by Neutron.
    type: string
  NeutronApiExtensionsPath:
    default: '/usr/lib/python2.7/site-packages/midonet_ext/neutron/extensions'
    description: Array containing the Neutron API extensions path.
    type: string

outputs:
  role_data:
    description: Role data for the MidoNet initial network configuration service
    value:
      service_name: midonet_config
      config_settings:
        tripleo::network::midonet::config::port_interface_name: {get_param: NetworkConfigPortPhysicalName}
        tripleo::network::midonet::config::neutron_service_providers: {get_param: NeutronServiceProviders}
        neutron::api_extensions_path: {get_param: NeutronApiExtensionsPath}
      step_config: |
        include ::tripleo::network::midonet::config
