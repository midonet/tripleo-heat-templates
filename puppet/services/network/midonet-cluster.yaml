heat_template_version: 2016-04-08

description: >
  MidoNet Cluster (formerly known as MidoNet API) service deployment using Puppet

parameters:
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  InternalApiNetCidr:
    default: '172.16.2.0/24'
    description: Cidr for the internal API network.
    type: string
  MidonetClusterUsername:
    default: "admin"
    description: Keystone user to be used for authentication (must have
                 the admin role)
    type: string
  MidonetClusterMaxHeapSize:
    default: "4096M"
    description: Maximum heap size to be used by the JVM running the
                 MidoNet Cluster.
    type: string
  MidonetClusterHeapNewSize:
    default: "2048M"
    description: Size of the heap memory for the young generation in
                 MidoNet Cluster.
    type: string
  AdminPassword:
    description: The password for the keystone admin account, used to
                 query Neutron.
    type: string
    hidden: true
  MidonetClusterKeystoneDomainName:
    default: "Default"
    description: Keystone tenant where this user has the admin role.
    type: string
  MidonetClusterKeystoneDomainId:
    default: "default"
    description: ID for this keystone domain.
    type: string
  MidonetClusterKeystoneVersion:
    default: "3"
    description: Whether to use v2 or v3 of the Keystone API.
    type: string
  MidonetClusterServiceName:
    default: "midonet-cluster"
    description: Name of the MidoNet Cluster service.
    type: string
  MidonetClusterServiceEnsure:
    default: "running"
    description: Whether this service should be running or stopped.
    type: string
  MidonetClusterServiceEnable:
    default: true
    description: Whether this service should be running or stopped.
    type: boolean
  MidonetClusterConfigPath:
    default: "/etc/midonet/midonet.conf"
    description: Path where the MidoNet Cluster configuration file is located.
    type: string
  MidonetClusterJvmConfigPath:
    default: "/etc/midonet-cluster/midonet-cluster-env.sh"
    description: Path where the MidoNet Cluster JVM configuration file is.
    type: string
  MidonetClusterBindHost:
    default: "0.0.0.0"
    description: IP where the MidoNet Cluster will bind itself.
    type: string
  MidonetClusterPackageEnsure:
    default: "present"
    description: Whether the package should be installed or absent, or in a
                 specific version.
    type: string
  MidonetClusterInsightsSsl:
    default: false
    description: (MEM ONLY) Enable if Insights will use SSL or not.
    type: boolean
  MidonetClusterPort:
    default: "8181"
    description: Port that will be bound. Usually you don't want to modify
                 this (see firewall rule below).
    type: string
  MidonetClusterElkClusterName:
    default: ""
    description: (MEM ONLY) Elasticsearch cluster name. Not needed if running a single
                 ELK node.
    type: string
  MidonetClusterElkTargetEndpoint:
    default: ""
    description: (MEM ONLY) Target ELK endpoint to be configured.
    type: string
  MidonetClusterFlowHistoryPort:
    default: "5001"
    description: (MEM ONLY) Port to be used by the flow history endpoint.
    type: string
  MidonetClusterJarvisEnabled:
    default: false
    description: (MEM ONLY) Whether to enable Jarvis or not.
    type: boolean
  AdminToken:
    description: The keystone auth secret and db password.
    type: string
    hidden: true

resources:
  MidonetBase:
    type: ./midonet-base.yaml
    properties:
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}

outputs:
  role_data:
    description: Service MidoNet Cluster using composable services
    value:
      service_name: midonet_cluster
      config_settings:
        map_merge:
          - get_attr: [MidonetBase, role_data, config_settings]
          - tripleo::network::midonet::cluster::keystone_user_name: {get_param: MidonetClusterUsername}
            tripleo::network::midonet::cluster::keystone_user_password: {get_param: AdminPassword}
            tripleo::network::midonet::cluster::keystone_protocol: {get_param: [EndpointMap, KeystoneInternal, protocol] }
            tripleo::network::midonet::cluster::keystone_admin_token: {get_param: AdminToken}
            tripleo::network::midonet::cluster::keystone_domain_name: {get_param: MidonetClusterKeystoneDomainName}
            tripleo::network::midonet::cluster::keystone_domain_id: {get_param: MidonetClusterKeystoneDomainId}
            tripleo::network::midonet::cluster::keystone_version: {get_param: MidonetClusterKeystoneVersion}
            tripleo::network::midonet::cluster::keystone_host: '"%{hiera(\"keystone_public_api_vip\")}"'
            tripleo::network::midonet::cluster::keystone_port: '5000'
            tripleo::network::midonet::cluster::cluster_port: {get_param: MidonetClusterPort}
            tripleo::network::midonet::cluster::state_proxy_address: '"%{::ipaddress}"'
            tripleo::network::midonet::cluster::state_proxy_port: '2346'
            tripleo::network::midonet::cluster::max_heap_size: {get_param: MidonetClusterMaxHeapSize}
            tripleo::network::midonet::cluster::heap_newsize: {get_param: MidonetClusterHeapNewSize}
            tripleo::network::midonet::cluster::service_name: {get_param: MidonetClusterServiceName}
            tripleo::network::midonet::cluster::service_ensure: {get_param: MidonetClusterServiceEnsure}
            tripleo::network::midonet::cluster::service_enable: {get_param: MidonetClusterServiceEnable}
            tripleo::network::midonet::cluster::cluster_config_path: {get_param: MidonetClusterConfigPath}
            tripleo::network::midonet::cluster::cluster_jvm_config_path: {get_param: MidonetClusterJvmConfigPath}
            tripleo::network::midonet::cluster::cluster_host: {get_param: MidonetClusterBindHost}
            tripleo::network::midonet::cluster::package_ensure: {get_param: MidonetClusterPackageEnsure}
            tripleo::network::midonet::cluster::insights_ssl: {get_param: MidonetClusterInsightsSsl}
            tripleo::network::midonet::cluster::analytics_ip: '"%{hiera(\"midonet_cluster_vip\")}"'
            tripleo::network::midonet::cluster::elk_seeds: '"%{hiera(\"midonet_analytics_node_ips\")}"'
            tripleo::network::midonet::cluster::cluster_api_address: '"%{hiera(\"midonet_cluster_vip\")}"'
            tripleo::network::midonet::cluster::cluster_api_port: {get_param: MidonetClusterPort}
            tripleo::network::midonet::cluster::elk_cluster_name: {get_param: MidonetClusterElkClusterName}
            tripleo::network::midonet::cluster::elk_target_endpoint: {get_param: InternalApiNetCidr}
            tripleo::network::midonet::cluster::endpoint_host: {get_param: [ServiceNetMap, MidonetClusterNetwork]}
            tripleo::network::midonet::cluster::flow_history_port: {get_param: MidonetClusterFlowHistoryPort}
            tripleo::network::midonet::cluster::jarvis_enabled: {get_param: MidonetClusterJarvisEnabled}
            tripleo.midonet_cluster.firewall_rules:
              '310 MidoNet Cluster':
                dport:
                  - 8181
              '311 MidoNet Cluster (Analytics Endpoint)':
                dport:
                  - 8099
              '312 MidoNet Cluster (Analytics Endpoint)':
                dport:
                  - 5000
              '313 MidoNet Cluster (Analytics Endpoint)':
                dport:
                  - 5001
              '314 MidoNet Cluster (Analytics Endpoint)':
                dport:
                  - 5005
              '315 MidoNet Cluster (Analytics Endpoint)':
                dport:
                  - 9200
              '316 MidoNet Cluster (Analytics Endpoint)':
                dport:
                  - 9300
      step_config: |
        include ::tripleo::network::midonet::cluster
